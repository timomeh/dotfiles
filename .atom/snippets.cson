# Your snippets
#
# Atom snippets allow you to enter a simple prefix in the editor and hit tab to
# expand the prefix into a larger code block with templated values.
#
# You can create a new snippet in this file by typing "snip" and then hitting
# tab.
#
# An example CoffeeScript snippet to expand log to console.log:
#
# '.source.coffee':
#   'Console log':
#     'prefix': 'log'
#     'body': 'console.log $1'
#
# Each scope (e.g. '.source.coffee' above) can only be declared once.
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# http://flight-manual.atom.io/using-atom/sections/basic-customization/#_cson

'.source.js':
  'Import':
    'prefix': 'import'
    'body': "import $1 from '${2:$1}'"
  'react class component':
    'prefix': 'reactful'
    'body': '''
      import React from 'react'
      import PropTypes from 'prop-types'

      export default class ${1:MyComponent} extends React.PureComponent {
        static propTypes = {

        }

        render() {
          return ${2:<div />}
        }
      }

    '''
  'react functional component':
    'prefix': 'reactless'
    'body': '''
      import React from 'react'
      import PropTypes from 'prop-types'

      const ${1:MyComponent} = ${2:props} => {
        return ${3:<div />}
      }

      ${1:MyComponent}.propTypes = {

      }

      export default ${1:MyComponent}

    '''
